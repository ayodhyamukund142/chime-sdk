import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
import { AssociateChannelFlowCommandInput, AssociateChannelFlowCommandOutput } from "./commands/AssociateChannelFlowCommand";
import { BatchCreateChannelMembershipCommandInput, BatchCreateChannelMembershipCommandOutput } from "./commands/BatchCreateChannelMembershipCommand";
import { ChannelFlowCallbackCommandInput, ChannelFlowCallbackCommandOutput } from "./commands/ChannelFlowCallbackCommand";
import { CreateChannelBanCommandInput, CreateChannelBanCommandOutput } from "./commands/CreateChannelBanCommand";
import { CreateChannelCommandInput, CreateChannelCommandOutput } from "./commands/CreateChannelCommand";
import { CreateChannelFlowCommandInput, CreateChannelFlowCommandOutput } from "./commands/CreateChannelFlowCommand";
import { CreateChannelMembershipCommandInput, CreateChannelMembershipCommandOutput } from "./commands/CreateChannelMembershipCommand";
import { CreateChannelModeratorCommandInput, CreateChannelModeratorCommandOutput } from "./commands/CreateChannelModeratorCommand";
import { DeleteChannelBanCommandInput, DeleteChannelBanCommandOutput } from "./commands/DeleteChannelBanCommand";
import { DeleteChannelCommandInput, DeleteChannelCommandOutput } from "./commands/DeleteChannelCommand";
import { DeleteChannelFlowCommandInput, DeleteChannelFlowCommandOutput } from "./commands/DeleteChannelFlowCommand";
import { DeleteChannelMembershipCommandInput, DeleteChannelMembershipCommandOutput } from "./commands/DeleteChannelMembershipCommand";
import { DeleteChannelMessageCommandInput, DeleteChannelMessageCommandOutput } from "./commands/DeleteChannelMessageCommand";
import { DeleteChannelModeratorCommandInput, DeleteChannelModeratorCommandOutput } from "./commands/DeleteChannelModeratorCommand";
import { DescribeChannelBanCommandInput, DescribeChannelBanCommandOutput } from "./commands/DescribeChannelBanCommand";
import { DescribeChannelCommandInput, DescribeChannelCommandOutput } from "./commands/DescribeChannelCommand";
import { DescribeChannelFlowCommandInput, DescribeChannelFlowCommandOutput } from "./commands/DescribeChannelFlowCommand";
import { DescribeChannelMembershipCommandInput, DescribeChannelMembershipCommandOutput } from "./commands/DescribeChannelMembershipCommand";
import { DescribeChannelMembershipForAppInstanceUserCommandInput, DescribeChannelMembershipForAppInstanceUserCommandOutput } from "./commands/DescribeChannelMembershipForAppInstanceUserCommand";
import { DescribeChannelModeratedByAppInstanceUserCommandInput, DescribeChannelModeratedByAppInstanceUserCommandOutput } from "./commands/DescribeChannelModeratedByAppInstanceUserCommand";
import { DescribeChannelModeratorCommandInput, DescribeChannelModeratorCommandOutput } from "./commands/DescribeChannelModeratorCommand";
import { DisassociateChannelFlowCommandInput, DisassociateChannelFlowCommandOutput } from "./commands/DisassociateChannelFlowCommand";
import { GetChannelMembershipPreferencesCommandInput, GetChannelMembershipPreferencesCommandOutput } from "./commands/GetChannelMembershipPreferencesCommand";
import { GetChannelMessageCommandInput, GetChannelMessageCommandOutput } from "./commands/GetChannelMessageCommand";
import { GetChannelMessageStatusCommandInput, GetChannelMessageStatusCommandOutput } from "./commands/GetChannelMessageStatusCommand";
import { GetMessagingSessionEndpointCommandInput, GetMessagingSessionEndpointCommandOutput } from "./commands/GetMessagingSessionEndpointCommand";
import { ListChannelBansCommandInput, ListChannelBansCommandOutput } from "./commands/ListChannelBansCommand";
import { ListChannelFlowsCommandInput, ListChannelFlowsCommandOutput } from "./commands/ListChannelFlowsCommand";
import { ListChannelMembershipsCommandInput, ListChannelMembershipsCommandOutput } from "./commands/ListChannelMembershipsCommand";
import { ListChannelMembershipsForAppInstanceUserCommandInput, ListChannelMembershipsForAppInstanceUserCommandOutput } from "./commands/ListChannelMembershipsForAppInstanceUserCommand";
import { ListChannelMessagesCommandInput, ListChannelMessagesCommandOutput } from "./commands/ListChannelMessagesCommand";
import { ListChannelModeratorsCommandInput, ListChannelModeratorsCommandOutput } from "./commands/ListChannelModeratorsCommand";
import { ListChannelsAssociatedWithChannelFlowCommandInput, ListChannelsAssociatedWithChannelFlowCommandOutput } from "./commands/ListChannelsAssociatedWithChannelFlowCommand";
import { ListChannelsCommandInput, ListChannelsCommandOutput } from "./commands/ListChannelsCommand";
import { ListChannelsModeratedByAppInstanceUserCommandInput, ListChannelsModeratedByAppInstanceUserCommandOutput } from "./commands/ListChannelsModeratedByAppInstanceUserCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { PutChannelMembershipPreferencesCommandInput, PutChannelMembershipPreferencesCommandOutput } from "./commands/PutChannelMembershipPreferencesCommand";
import { RedactChannelMessageCommandInput, RedactChannelMessageCommandOutput } from "./commands/RedactChannelMessageCommand";
import { SearchChannelsCommandInput, SearchChannelsCommandOutput } from "./commands/SearchChannelsCommand";
import { SendChannelMessageCommandInput, SendChannelMessageCommandOutput } from "./commands/SendChannelMessageCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateChannelCommandInput, UpdateChannelCommandOutput } from "./commands/UpdateChannelCommand";
import { UpdateChannelFlowCommandInput, UpdateChannelFlowCommandOutput } from "./commands/UpdateChannelFlowCommand";
import { UpdateChannelMessageCommandInput, UpdateChannelMessageCommandOutput } from "./commands/UpdateChannelMessageCommand";
import { UpdateChannelReadMarkerCommandInput, UpdateChannelReadMarkerCommandOutput } from "./commands/UpdateChannelReadMarkerCommand";
export declare type ServiceInputTypes = AssociateChannelFlowCommandInput | BatchCreateChannelMembershipCommandInput | ChannelFlowCallbackCommandInput | CreateChannelBanCommandInput | CreateChannelCommandInput | CreateChannelFlowCommandInput | CreateChannelMembershipCommandInput | CreateChannelModeratorCommandInput | DeleteChannelBanCommandInput | DeleteChannelCommandInput | DeleteChannelFlowCommandInput | DeleteChannelMembershipCommandInput | DeleteChannelMessageCommandInput | DeleteChannelModeratorCommandInput | DescribeChannelBanCommandInput | DescribeChannelCommandInput | DescribeChannelFlowCommandInput | DescribeChannelMembershipCommandInput | DescribeChannelMembershipForAppInstanceUserCommandInput | DescribeChannelModeratedByAppInstanceUserCommandInput | DescribeChannelModeratorCommandInput | DisassociateChannelFlowCommandInput | GetChannelMembershipPreferencesCommandInput | GetChannelMessageCommandInput | GetChannelMessageStatusCommandInput | GetMessagingSessionEndpointCommandInput | ListChannelBansCommandInput | ListChannelFlowsCommandInput | ListChannelMembershipsCommandInput | ListChannelMembershipsForAppInstanceUserCommandInput | ListChannelMessagesCommandInput | ListChannelModeratorsCommandInput | ListChannelsAssociatedWithChannelFlowCommandInput | ListChannelsCommandInput | ListChannelsModeratedByAppInstanceUserCommandInput | ListTagsForResourceCommandInput | PutChannelMembershipPreferencesCommandInput | RedactChannelMessageCommandInput | SearchChannelsCommandInput | SendChannelMessageCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateChannelCommandInput | UpdateChannelFlowCommandInput | UpdateChannelMessageCommandInput | UpdateChannelReadMarkerCommandInput;
export declare type ServiceOutputTypes = AssociateChannelFlowCommandOutput | BatchCreateChannelMembershipCommandOutput | ChannelFlowCallbackCommandOutput | CreateChannelBanCommandOutput | CreateChannelCommandOutput | CreateChannelFlowCommandOutput | CreateChannelMembershipCommandOutput | CreateChannelModeratorCommandOutput | DeleteChannelBanCommandOutput | DeleteChannelCommandOutput | DeleteChannelFlowCommandOutput | DeleteChannelMembershipCommandOutput | DeleteChannelMessageCommandOutput | DeleteChannelModeratorCommandOutput | DescribeChannelBanCommandOutput | DescribeChannelCommandOutput | DescribeChannelFlowCommandOutput | DescribeChannelMembershipCommandOutput | DescribeChannelMembershipForAppInstanceUserCommandOutput | DescribeChannelModeratedByAppInstanceUserCommandOutput | DescribeChannelModeratorCommandOutput | DisassociateChannelFlowCommandOutput | GetChannelMembershipPreferencesCommandOutput | GetChannelMessageCommandOutput | GetChannelMessageStatusCommandOutput | GetMessagingSessionEndpointCommandOutput | ListChannelBansCommandOutput | ListChannelFlowsCommandOutput | ListChannelMembershipsCommandOutput | ListChannelMembershipsForAppInstanceUserCommandOutput | ListChannelMessagesCommandOutput | ListChannelModeratorsCommandOutput | ListChannelsAssociatedWithChannelFlowCommandOutput | ListChannelsCommandOutput | ListChannelsModeratedByAppInstanceUserCommandOutput | ListTagsForResourceCommandOutput | PutChannelMembershipPreferencesCommandOutput | RedactChannelMessageCommandOutput | SearchChannelsCommandOutput | SendChannelMessageCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateChannelCommandOutput | UpdateChannelFlowCommandOutput | UpdateChannelMessageCommandOutput | UpdateChannelReadMarkerCommandOutput;
export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
    
    requestHandler?: __HttpHandler;
    
    sha256?: __HashConstructor;
    
    urlParser?: __UrlParser;
    
    bodyLengthChecker?: __BodyLengthCalculator;
    
    streamCollector?: __StreamCollector;
    
    base64Decoder?: __Decoder;
    
    base64Encoder?: __Encoder;
    
    utf8Decoder?: __Decoder;
    
    utf8Encoder?: __Encoder;
    
    runtime?: string;
    
    disableHostPrefix?: boolean;
    
    maxAttempts?: number | __Provider<number>;
    
    retryMode?: string | __Provider<string>;
    
    logger?: __Logger;
    
    useDualstackEndpoint?: boolean | __Provider<boolean>;
    
    useFipsEndpoint?: boolean | __Provider<boolean>;
    
    serviceId?: string;
    
    region?: string | __Provider<string>;
    
    credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
    
    regionInfoProvider?: RegionInfoProvider;
    
    defaultUserAgentProvider?: Provider<__UserAgent>;
    
    defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
}
declare type ChimeSDKMessagingClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;

export interface ChimeSDKMessagingClientConfig extends ChimeSDKMessagingClientConfigType {
}
declare type ChimeSDKMessagingClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;

export interface ChimeSDKMessagingClientResolvedConfig extends ChimeSDKMessagingClientResolvedConfigType {
}

export declare class ChimeSDKMessagingClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ChimeSDKMessagingClientResolvedConfig> {
    
    readonly config: ChimeSDKMessagingClientResolvedConfig;
    constructor(configuration: ChimeSDKMessagingClientConfig);
    
    destroy(): void;
}
export {};
