{"version":3,"file":"Utilities.js","sourceRoot":"","sources":["../../src/Utilities.ts"],"names":[],"mappings":"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","sourcesContent":["import { Argument, AllArguments } from \"./Arguments\";\r\nimport { GetPropertyState } from './states/GetPropertyState'\r\nimport { InitialState } from './states/InitialState'\r\nimport { Context } from './Context'\r\nimport util = require('util')\r\n\r\nexport type Call = any[] // list of args\r\n\r\nexport enum Type {\r\n  method = 'method',\r\n  property = 'property'\r\n}\r\n\r\nexport function stringifyArguments(args: any[]) {\r\n    args = args.map(x => util.inspect(x));\r\n    return args && args.length > 0 ? 'arguments [' + args.join(', ') + ']' : 'no arguments';\r\n};\r\n\r\nexport function areArgumentArraysEqual(a: any[], b: any[]) {\r\n    if (a.find(x => x instanceof AllArguments) || b.find(b => b instanceof AllArguments)) {\r\n        return true;\r\n    }\r\n\r\n    for (var i = 0; i < Math.max(b.length, a.length); i++) {\r\n        if (!areArgumentsEqual(b[i], a[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function stringifyCalls(calls: Call[]) {\r\n\r\n    if(calls.length === 0)\r\n        return ' (no calls)';\r\n\r\n    let output = '';\r\n    for (let call of calls) {\r\n        output += '\\n-> call with ' + (call.length ? stringifyArguments(call) : '(no arguments)')\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\nexport function areArgumentsEqual(a: any, b: any) {\r\n    \r\n    if(a instanceof Argument && b instanceof Argument) {\r\n        return false;\r\n    }\r\n\r\n    if(a instanceof AllArguments || b instanceof AllArguments)\r\n        return true;\r\n\r\n    if(a instanceof Argument) \r\n        return a.matches(b);\r\n\r\n    if(b instanceof Argument)\r\n        return b.matches(a);\r\n\r\n    return a === b;\r\n};\r\n\r\nexport function Get(recorder: InitialState, context: Context, property: PropertyKey) {\r\n    const existingGetState = recorder.getPropertyStates.find(state => state.property === property);\r\n    if (existingGetState) {\r\n        context.state = existingGetState;\r\n        return context.get(void 0, property);\r\n    }\r\n\r\n    const getState = new GetPropertyState(property);\r\n    context.state = getState;\r\n\r\n    recorder.recordGetPropertyState(property, getState);\r\n\r\n    return context.get(void 0, property);\r\n}"]}