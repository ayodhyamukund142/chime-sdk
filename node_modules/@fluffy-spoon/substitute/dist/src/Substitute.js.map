{"version":3,"file":"Substitute.js","sourceRoot":"","sources":["../../src/Substitute.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAoC;AAEpC,yCAAiC;AAEpB,QAAA,UAAU,GAAG,MAAM,EAAE,CAAC;AACtB,QAAA,qBAAqB,GAAG,MAAM,EAAE,CAAC;AAI9C;IAAA;IAgCA,CAAC;IA/BU,cAAG,GAAV;QACI,IAAM,aAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;QACpC,OAAO,aAAa,CAAC,SAAS,CAAC;IACnC,CAAC;IAEM,qBAAU,GAAjB,UAAqE,UAAa;QAC9E,IAAM,SAAS,GAAG,UAAiB,CAAC,CAAC,YAAY;QACjD,IAAM,gBAAgB,GAAG,SAAS,CAAC,kBAAU,CAAC,CAAC,CAAC,UAAU;QAE1D,IAAM,YAAY,GAAG,UAAqB,CAAI;YAC1C,OAAO;gBACH,SAAS,CAAC,6BAAqB,CAAC,GAAG,IAAI,CAAC,CAAC,oCAAoC;gBAC7E,IAAM,WAAW,GAAG,CAAC,CAAC,IAAI,OAAN,CAAC,YAAM,gBAAgB,GAAK,SAAS,EAAC,CAAC;gBAC3D,SAAS,CAAC,6BAAqB,CAAC,GAAG,KAAK,CAAC;gBACzC,OAAO,WAAW,CAAC;YACvB,CAAQ,CAAC;QACb,CAAC,CAAC;QAEF,OAAO,IAAI,KAAK,CAAC,cAAQ,CAAC,EAAE;YACxB,KAAK,EAAE,UAAU,OAAO,EAAE,KAAK,EAAE,IAAI;gBACjC,OAAO,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,wBAAI,SAAS,GAAC;YAC7D,CAAC;YACD,GAAG,EAAE,UAAU,OAAO,EAAE,QAAQ,EAAE,KAAK;gBACnC,OAAO,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,wBAAI,SAAS,GAAC;YAC3D,CAAC;YACD,GAAG,EAAE,UAAU,OAAO,EAAE,QAAQ;gBAC5B,eAAG,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAA;gBAC/D,OAAO,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,wBAAI,SAAS,GAAC;YAC3D,CAAC;SACJ,CAAQ,CAAC;IACd,CAAC;IACL,iBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,gCAAU","sourcesContent":["import { Context } from \"./Context\";\r\nimport { ObjectSubstitute, OmitProxyMethods, DisabledSubstituteObject } from \"./Transformations\";\r\nimport { Get } from './Utilities'\r\n\r\nexport const HandlerKey = Symbol();\r\nexport const AreProxiesDisabledKey = Symbol();\r\n\r\nexport type SubstituteOf<T extends Object> = ObjectSubstitute<OmitProxyMethods<T>, T> & T;\r\n\r\nexport class Substitute {\r\n    static for<T>(): SubstituteOf<T> {\r\n        const objectContext = new Context();\r\n        return objectContext.rootProxy;\r\n    }\r\n\r\n    static disableFor<T extends ObjectSubstitute<OmitProxyMethods<any>>>(substitute: T): DisabledSubstituteObject<T> {\r\n        const thisProxy = substitute as any; // rootProxy\r\n        const thisExposedProxy = thisProxy[HandlerKey]; // Context\r\n\r\n        const disableProxy = <K extends Function>(f: K): K => {\r\n            return function() {\r\n                thisProxy[AreProxiesDisabledKey] = true; // for what reason need to do this? \r\n                const returnValue = f.call(thisExposedProxy, ...arguments);\r\n                thisProxy[AreProxiesDisabledKey] = false;\r\n                return returnValue;\r\n            } as any;\r\n        };\r\n\r\n        return new Proxy(() => { }, {\r\n            apply: function (_target, _this, args) {\r\n                return disableProxy(thisExposedProxy.apply)(...arguments)\r\n            },\r\n            set: function (_target, property, value) {\r\n                return disableProxy(thisExposedProxy.set)(...arguments)\r\n            },\r\n            get: function (_target, property) {\r\n                Get(thisExposedProxy._initialState, thisExposedProxy, property)\r\n                return disableProxy(thisExposedProxy.get)(...arguments)\r\n            }\r\n        }) as any;\r\n    }\r\n}"]}